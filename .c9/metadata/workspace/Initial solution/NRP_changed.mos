{"filter":false,"title":"NRP_changed.mos","tooltip":"/Initial solution/NRP_changed.mos","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":207,"column":0},"end":{"row":208,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":208,"column":0},"end":{"row":209,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":209,"column":0},"end":{"row":210,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":210,"column":0},"end":{"row":211,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":211,"column":0},"end":{"row":321,"column":0},"action":"insert","lines":[" ! HC1: An employee cannot be assigned more than one shift per day","  forall (i in NurseID, d in Days) do","    ShiftCS(i,d) := sum(t in ShiftID) ShiftAssigned(i,d,t) <= 1","  end-do","","","","","","  ! HC2: No Forbidden shifts","  forall (t in ShiftID) do","    forall (Ft in ShiftID) do","      if ForbiddenShifts(t, Ft) <> \"NA\" then","        ForbiddenSets(t) += {ForbiddenShifts(t, Ft)}","      end-if","    end-do","  end-do","","  forall (d in 1..PlanningHorizon-1) do","    forall(i in NurseID, t in ShiftID) do","    ForbiddenCS(i,d,t) := ShiftAssigned(i,d,t) + sum(u in ForbiddenSets(t)) ShiftAssigned(i, d+1, u) <= 1","    end-do","  end-do","","","  ! HC3: Maximum number of shifts of each type assigned to an employee","    forall (i in NurseID, t in ShiftID) do","      MaxShiftsCS(i,t) := sum(d in Days) ShiftAssigned(i,d,t) <= MaxShifts(i,t)","    end-do","","","","  ! HC4: Minimum and Maximum Work times","    forall (i in NurseID) do","      MinWorkTimeCS(i) := sum(d in Days, t in ShiftID) ShiftLength(t)*ShiftAssigned(i,d,t) >= MinTotalMinutes(i)","      MaxWorkTimeCS(i) := sum(d in Days, t in ShiftID) ShiftLength(t)*ShiftAssigned(i,d,t) <= MaxTotalMinutes(i)","    end-do","","","  ! HC5: Minimum and Maximum consecutive shifts","    forall (i in NurseID) do","      ! Maximum consecutive shifts","      cmax := MaxConsecutiveShifts(i)","      maxd := PlanningHorizon - cmax","      forall (d in 1..maxd) do","        MaxConsecutiveShiftsCS(i,d) :=  sum(t in ShiftID, j in d..d+cmax) ShiftAssigned(i,j,t) <= cmax","      end-do","","    ! Minimum consecutive shifts","      maxs := MinConsecutiveShifts(i) - 1","      forall (s in 1..maxs) do","        maxd := PlanningHorizon - (s+1)","        forall (d in 1..maxd) do","          ! MinConsecutiveShiftsCS(i,d) := (sum(t in ShiftID) ShiftAssigned(i,d,t)) +","          ! (s - sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          ! (sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 1","","          MinConsecutiveShiftsCS(i,d,s) := (sum(t in ShiftID) ShiftAssigned(i,d,t)) + s - 1 -","          (sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          (sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 0","        end-do","      end-do","    end-do","","","  ! HC6: Minimum Consecutive Days Off","    forall (i in NurseID) do","      maxs := MinConsecutiveDaysOff(i) - 1","      forall (s in 1..maxs) do","        maxd := PlanningHorizon - (s+1)","        forall (d in 1..maxd) do","          MinConsecutiveDaysOffCS(i,d, s) := (1 - sum(t in ShiftID) ShiftAssigned(i,d,t)) +","          (sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          (1 - sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 1","        end-do","      end-do","    end-do","","","  ! HC7: Maximum number of Weekends worked by nurses","  forall (i in NurseID) do","    MaxNumWeekendsCS(i) := sum(w in Weekends) WeekendShiftAssigned(i,w) <= MaxWeekends(i)","    forall (w in Weekends) do","      MinWeekendsCS(i,w) := sum(t in ShiftID) (ShiftAssigned(i, 7*w - 1, t) + ShiftAssigned(i, 7*w, t)) >= WeekendShiftAssigned(i,w)","      MaxWeekendsCS(i,w) := sum(t in ShiftID) (ShiftAssigned(i, 7*w - 1, t) + ShiftAssigned(i, 7*w, t)) <= 2*WeekendShiftAssigned(i,w)","    end-do","  end-do","","","  ! HC8: Days off as per request","  forall (i in NurseID, t in ShiftID) do","    forall (d in DaysOff(i)) do","      DaysOffCS(i,d,t) := ShiftAssigned(i, d, t) = 0","    end-do","  end-do","","","  ! HC9: Coverage requirements","  forall (d in Days, t in ShiftID) do","    CoverageCS(d,t) := (sum(i in NurseID) ShiftAssigned(i,d,t)) - NursesAbovePreferredCoverage(d,t) + NursesBelowPreferredCoverage(d,t) = PreferredCoverage(d,t)","  end-do","","","  ! Set integer and binary variables","  forall(i in NurseID, d in Days, t in ShiftID, w in Weekends) do","    ShiftAssigned(i,d,t) is_binary","    WeekendShiftAssigned(i,w) is_binary","    NursesBelowPreferredCoverage(d,t) is_integer","    NursesAbovePreferredCoverage(d,t) is_integer","  end-do",""],"id":5}],[{"start":{"row":209,"column":0},"end":{"row":320,"column":8},"action":"remove","lines":["",""," ! HC1: An employee cannot be assigned more than one shift per day","  forall (i in NurseID, d in Days) do","    ShiftCS(i,d) := sum(t in ShiftID) ShiftAssigned(i,d,t) <= 1","  end-do","","","","","","  ! HC2: No Forbidden shifts","  forall (t in ShiftID) do","    forall (Ft in ShiftID) do","      if ForbiddenShifts(t, Ft) <> \"NA\" then","        ForbiddenSets(t) += {ForbiddenShifts(t, Ft)}","      end-if","    end-do","  end-do","","  forall (d in 1..PlanningHorizon-1) do","    forall(i in NurseID, t in ShiftID) do","    ForbiddenCS(i,d,t) := ShiftAssigned(i,d,t) + sum(u in ForbiddenSets(t)) ShiftAssigned(i, d+1, u) <= 1","    end-do","  end-do","","","  ! HC3: Maximum number of shifts of each type assigned to an employee","    forall (i in NurseID, t in ShiftID) do","      MaxShiftsCS(i,t) := sum(d in Days) ShiftAssigned(i,d,t) <= MaxShifts(i,t)","    end-do","","","","  ! HC4: Minimum and Maximum Work times","    forall (i in NurseID) do","      MinWorkTimeCS(i) := sum(d in Days, t in ShiftID) ShiftLength(t)*ShiftAssigned(i,d,t) >= MinTotalMinutes(i)","      MaxWorkTimeCS(i) := sum(d in Days, t in ShiftID) ShiftLength(t)*ShiftAssigned(i,d,t) <= MaxTotalMinutes(i)","    end-do","","","  ! HC5: Minimum and Maximum consecutive shifts","    forall (i in NurseID) do","      ! Maximum consecutive shifts","      cmax := MaxConsecutiveShifts(i)","      maxd := PlanningHorizon - cmax","      forall (d in 1..maxd) do","        MaxConsecutiveShiftsCS(i,d) :=  sum(t in ShiftID, j in d..d+cmax) ShiftAssigned(i,j,t) <= cmax","      end-do","","    ! Minimum consecutive shifts","      maxs := MinConsecutiveShifts(i) - 1","      forall (s in 1..maxs) do","        maxd := PlanningHorizon - (s+1)","        forall (d in 1..maxd) do","          ! MinConsecutiveShiftsCS(i,d) := (sum(t in ShiftID) ShiftAssigned(i,d,t)) +","          ! (s - sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          ! (sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 1","","          MinConsecutiveShiftsCS(i,d,s) := (sum(t in ShiftID) ShiftAssigned(i,d,t)) + s - 1 -","          (sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          (sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 0","        end-do","      end-do","    end-do","","","  ! HC6: Minimum Consecutive Days Off","    forall (i in NurseID) do","      maxs := MinConsecutiveDaysOff(i) - 1","      forall (s in 1..maxs) do","        maxd := PlanningHorizon - (s+1)","        forall (d in 1..maxd) do","          MinConsecutiveDaysOffCS(i,d, s) := (1 - sum(t in ShiftID) ShiftAssigned(i,d,t)) +","          (sum(j in d+1..d+s, t in ShiftID) ShiftAssigned(i,j,t)) +","          (1 - sum(t in ShiftID) ShiftAssigned(i, d+s+1, t)) >= 1","        end-do","      end-do","    end-do","","","  ! HC7: Maximum number of Weekends worked by nurses","  forall (i in NurseID) do","    MaxNumWeekendsCS(i) := sum(w in Weekends) WeekendShiftAssigned(i,w) <= MaxWeekends(i)","    forall (w in Weekends) do","      MinWeekendsCS(i,w) := sum(t in ShiftID) (ShiftAssigned(i, 7*w - 1, t) + ShiftAssigned(i, 7*w, t)) >= WeekendShiftAssigned(i,w)","      MaxWeekendsCS(i,w) := sum(t in ShiftID) (ShiftAssigned(i, 7*w - 1, t) + ShiftAssigned(i, 7*w, t)) <= 2*WeekendShiftAssigned(i,w)","    end-do","  end-do","","","  ! HC8: Days off as per request","  forall (i in NurseID, t in ShiftID) do","    forall (d in DaysOff(i)) do","      DaysOffCS(i,d,t) := ShiftAssigned(i, d, t) = 0","    end-do","  end-do","","","  ! HC9: Coverage requirements","  forall (d in Days, t in ShiftID) do","    CoverageCS(d,t) := (sum(i in NurseID) ShiftAssigned(i,d,t)) - NursesAbovePreferredCoverage(d,t) + NursesBelowPreferredCoverage(d,t) = PreferredCoverage(d,t)","  end-do","","","  ! Set integer and binary variables","  forall(i in NurseID, d in Days, t in ShiftID, w in Weekends) do","    ShiftAssigned(i,d,t) is_binary","    WeekendShiftAssigned(i,w) is_binary","    NursesBelowPreferredCoverage(d,t) is_integer","    NursesAbovePreferredCoverage(d,t) is_integer","  end-do"],"id":6}],[{"start":{"row":208,"column":0},"end":{"row":209,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":207,"column":0},"end":{"row":208,"column":0},"action":"remove","lines":["",""],"id":8}],[{"start":{"row":206,"column":9},"end":{"row":207,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":36,"column":72},"end":{"row":36,"column":73},"action":"remove","lines":[" "],"id":10},{"start":{"row":173,"column":10},"end":{"row":173,"column":11},"action":"remove","lines":[" "]},{"start":{"row":180,"column":0},"end":{"row":180,"column":4},"action":"remove","lines":["    "]},{"start":{"row":181,"column":0},"end":{"row":181,"column":4},"action":"remove","lines":["    "]}]]},"ace":{"folds":[],"scrolltop":2919.5,"scrollleft":0,"selection":{"start":{"row":206,"column":9},"end":{"row":206,"column":9},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":193,"state":"start","mode":"plugins/fico.ide.language.mosel/mode/mosel"}},"timestamp":1700067819204,"hash":"171d3e5cf89ef423f339db0cde72927950f88597"}